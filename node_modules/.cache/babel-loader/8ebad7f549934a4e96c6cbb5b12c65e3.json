{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\React\\\\React02\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\"; // import About from \"./components/About\";\n\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }; // const backgroundRemover = () => {\n  //   document.body.classList.remove('bg-success');\n  //   document.body.classList.remove('bg-warning');\n  //   document.body.classList.remove('bg-info');\n  //   document.body.classList.remove('bg-danger');\n  //   document.body.classList.remove('bg-light');\n  //   document.body.classList.remove('bg-dark');\n  // }\n\n\n  const toggleSwitch = cls => {\n    // backgroundRemover();\n    // console.log(\"Switch has been toggled\");\n    // document.body.classList.add('bg-'+cls);\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n\n    if (cls === 'success') {\n      setMode('dark');\n      document.body.style.backgroundColor = \"green\";\n      document.body.style.color = \"white\";\n      showAlert(\"Green mode has been enabled\", \"success\");\n    }\n\n    if (cls === 'danger') {\n      setMode('dark');\n      document.body.style.backgroundColor = \"red\";\n      document.body.style.color = \"white\";\n      showAlert(\"Red mode has been enabled\", \"success\");\n    }\n\n    if (cls === 'warning') {\n      setMode('dark');\n      document.body.style.backgroundColor = \"yellow\";\n      document.body.style.color = \"black\";\n      showAlert(\"Yellow mode has been enabled\", \"success\");\n    }\n\n    if (cls === 'info') {\n      setMode('dark');\n      document.body.style.backgroundColor = \"blue\";\n      document.body.style.color = \"white\";\n      showAlert(\"Blue mode has been enabled\", \"success\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutText: \"About\",\n      mode: mode,\n      toggleSwitch: toggleSwitch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter your text to analyze\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","Alert","React","useState","App","mode","setMode","alert","setAlert","showAlert","message","type","setTimeout","toggleSwitch","cls","document","body","style","backgroundColor","color"],"sources":["D:/Work/React/React02/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  // const backgroundRemover = () => {\n  //   document.body.classList.remove('bg-success');\n  //   document.body.classList.remove('bg-warning');\n  //   document.body.classList.remove('bg-info');\n  //   document.body.classList.remove('bg-danger');\n  //   document.body.classList.remove('bg-light');\n  //   document.body.classList.remove('bg-dark');\n  // }\n  const toggleSwitch = (cls) => {\n    // backgroundRemover();\n    // console.log(\"Switch has been toggled\");\n    // document.body.classList.add('bg-'+cls);\n\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n    if(cls === 'success'){\n      setMode('dark')\n      document.body.style.backgroundColor = \"green\";\n      document.body.style.color = \"white\";\n      showAlert(\"Green mode has been enabled\", \"success\");\n    }\n    if(cls === 'danger'){\n      setMode('dark')\n      document.body.style.backgroundColor = \"red\";\n      document.body.style.color = \"white\";\n      showAlert(\"Red mode has been enabled\", \"success\");\n    }\n    if(cls === 'warning'){\n      setMode('dark')\n      document.body.style.backgroundColor = \"yellow\";\n      document.body.style.color = \"black\";\n      showAlert(\"Yellow mode has been enabled\", \"success\");\n    }\n    if(cls === 'info'){\n      setMode('dark')\n      document.body.style.backgroundColor = \"blue\";\n      document.body.style.color = \"white\";\n      showAlert(\"Blue mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About\"\n        mode={mode}\n        toggleSwitch={toggleSwitch}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm\n          showAlert={showAlert}\n          heading=\"Enter your text to analyze\"\n          mode={mode}\n        />\n        {/* <About/> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}